### YamlMime:Tutorial
title: Buat mesin virtual dengan Azure PowerShell
metadata:
  title: Buat mesin virtual dengan Azure PowerShell
  description: Mulailah dengan Azure PowerShell dengan membuat mesin virtual.
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurepowershell
  ms.date: 02/08/2022
  ms.author: mirobb
  author: mikefrobbins
  manager: barbkess
  ms.devlang: azure-powershell
  ms.prod: powershell
  ms.technology: azure-powershell
  ms.topic: tutorial
  clicktale: true
  ms.openlocfilehash: 53c086f09204bcdac188549aa8338d6b6924876f
  ms.sourcegitcommit: cdca0d3199eb118c98aafb63ffcacc3dd080f0d4
  ms.translationtype: MT
  ms.contentlocale: id-ID
  ms.lasthandoff: 02/16/2022
  ms.locfileid: "138855731"
items:
- durationInMinutes: 1
  content: >-
    Dalam tutorial ini, Anda mempelajari semua langkah yang terlibat dalam menyiapkan mesin virtual dengan Azure PowerShell. Tutorial ini juga mencakup kueri output, penggunaan kembali sumber daya Azure, dan pembersihan sumber daya.


    Tutorial ini dapat diselesaikan dengan pengalaman interaktif yang ditawarkan melalui Azure Cloud Shell, atau Anda dapat [menginstal Azure PowerShell](install-az-ps.md) secara lokal.


    Gunakan **ctrl-shift-v** (**cmd-shift-v** di macOS) untuk menempelkan teks tutorial ke Azure Cloud Shell.
- durationInMinutes: 1
  title: Masuk
  content: >-
    Jika Anda menggunakan instalasi lokal Azure PowerShell, Anda harus masuk sebelum melakukan langkah-langkah lain.


    ```powershell-interactive

    Connect-AzAccount

    ```


    Selesaikan proses masuk dengan mengikuti langkah-langkah yang ditampilkan di terminal Anda.
- durationInMinutes: 1
  title: Buat grup sumber daya
  content: >-
    Di Azure, semua sumber daya dialokasikan dalam grup manajemen sumber daya. Kelompok sumber daya menyediakan pengelompokan sumber daya logis yang membuatnya lebih mudah untuk dikerjakan sebagai koleksi.

    Untuk tutorial ini, semua sumber daya yang dibuat masuk ke dalam satu kelompok bernama `TutorialResources`.


    ```powershell-interactive

    New-AzResourceGroup -Name TutorialResources -Location eastus

    ```


    ```Output

    ResourceGroupName : TutorialResources

    Location          : eastus

    ProvisioningState : Succeeded

    Tags              :

    ResourceId        : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources

    ```
- durationInMinutes: 1
  title: Membuat kredensial admin untuk VM
  content: >-
    Sebelum Anda dapat membuat mesin virtual baru, Anda harus membuat objek kredensial yang berisi nama pengguna dan kata sandi untuk akun administrator Windows VM.


    ```powershell-interactive

    $cred = Get-Credential -Message "Enter a username and password for the virtual machine."

    ```


    Masukkan nama pengguna dan kata sandi saat diminta. Objek kredensial yang dihasilkan dilewatkan sebagai parameter di langkah berikutnya.


    ```Output

    Windows PowerShell credential request.

    Enter a username and password for the virtual machine.

    User: tutorAdmin

    Password for user tutorAdmin: *********

    ```
- durationInMinutes: 4
  title: Membuat komputer virtual
  content: >-
    Mesin virtual di Azure memiliki sejumlah besar dependensi. Azure PowerShell membuat sumber daya ini untuk Anda berdasarkan argumen baris perintah yang Anda tentukan. Untuk keterbacaan, kami menggunakan [splatting PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting) untuk meneruskan parameter ke cmdlet Azure PowerShell.


    Buat mesin virtual baru yang berjalan Windows.


    ```powershell-interactive

    $vmParams = @{
      ResourceGroupName = 'TutorialResources'
      Name = 'TutorialVM1'
      Location = 'eastus'
      ImageName = 'Win2016Datacenter'
      PublicIpAddressName = 'tutorialPublicIp'
      Credential = $cred
      OpenPorts = 3389
    }

    $newVM1 = New-AzVM @vmParams

    ```

    Saat VM dibuat, Anda akan melihat nilai parameter yang digunakan dan sumber daya Azure sedang dibuat.

    PowerShell akan menampilkan bilah kemajuan seperti yang ditunjukkan di bawah ini.


    ```Output
     Creating Azure resources
      39% \
      [ooooooooooooooooooooooooooooooooooo                                                                 ]

      Creating TutorialVM1 virtual machine.
    ```


    Setelah VM siap, kita dapat melihat hasilnya di Portal Microsoft Azure atau dengan \$memeriksa variabelVM1 baru.


    ```powershell-interactive

    $newVM1

    ```


    ```Output

    ResourceGroupName : TutorialResources

    Id                : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM1

    VmId              : 12345678-9abc-def0-1234-56789abcedf0

    Name              : TutorialVM1

    Type              : Microsoft.Compute/virtualMachines

    Location          : eastus

    Tags              : {}

    HardwareProfile   : {VmSize}

    NetworkProfile    : {NetworkInterfaces}

    OSProfile         : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}

    ProvisioningState : Succeeded

    StorageProfile    : {ImageReference, OsDisk, DataDisks}

    ```


    Nilai properti yang tercantum di dalam kawat gigi adalah objek bersarang. Pada langkah berikutnya kami akan menunjukkan kepada Anda cara melihat nilai tertentu dalam objek bersarang ini.
- durationInMinutes: 5
  title: Mendapatkan informasi VM dengan kueri
  content: >-
    Mari kita dapatkan beberapa informasi lebih rinci dari VM yang baru saja kita buat. Dalam contoh ini, kami memverifikasi Nama VM dan akun admin yang kami buat.


    ```powershell-interactive

    $newVM1.OSProfile | Select-Object ComputerName,AdminUserName

    ```


    ```Output

    ComputerName AdminUsername

    ------------ -------------

    TutorialVM1  tutorialAdmin

    ```


    Kita dapat menggunakan perintah Azure PowerShell lain untuk mendapatkan informasi spesifik tentang konfigurasi jaringan.


    ```powershell-interactive

    $newVM1 | Get-AzNetworkInterface |
      Select-Object -ExpandProperty IpConfigurations |
        Select-Object Name,PrivateIpAddress
    ```


    Dalam contoh ini kita menggunakan pipeline PowerShell untuk mengirim \$objek newVM1 ke `Get-AzNetworkInterface` cmdlet. Dari objek antarmuka jaringan yang dihasilkan, kami memilih objek IpConfigurations bersarang. Dari objek IpConfigurations kami memilih properti Name dan PrivateIpAddress.


    ```Output

    Name        PrivateIpAddress

    ----        ----------------

    TutorialVM1 192.168.1.4

    ```


    Untuk mengonfirmasi bahwa VM berjalan, kita perlu terhubung melalui Remote Desktop. Untuk itu, kita perlu mengetahui alamat IP Publik.


    ```powershell-interactive

    $publicIp = Get-AzPublicIpAddress -Name tutorialPublicIp -ResourceGroupName TutorialResources


    $publicIp | Select-Object Name,IpAddress,@{label='FQDN';expression={$_.DnsSettings.Fqdn}}

    ```


    Dalam contoh ini, kita menggunakan `Get-AzPublicIpAddress` dan menyimpan hasilnya dalam \$variabel publicIp. Dari variabel ini kami memilih properti dan menggunakan ekspresi untuk mengambil properti Fqdn bersarang.


    ```Output

    Name             IpAddress           FQDN

    ----             ---------           ----

    tutorialPublicIp <PUBLIC_IP_ADDRESS> tutorialvm1-8a0999.eastus.cloudapp.azure.com

    ```


    Dari mesin lokal Anda, Anda dapat menjalankan perintah berikut untuk terhubung ke VM melalui Remote Desktop.


    ```powershell-interactive

    mstsc.exe /v <PUBLIC_IP_ADDRESS>

    ```


    Untuk informasi selengkapnya tentang kueri untuk properti objek, lihat [Kueri untuk sumber daya Azure](./queries-azureps.md).
- durationInMinutes: 4
  title: Membuat VM baru di subnet yang ada
  content: >-
    VM kedua menggunakan subnet yang ada.


    ```powershell-interactive

    $vm2Params = @{
      ResourceGroupName = 'TutorialResources'
      Name = 'TutorialVM2'
      ImageName = 'Win2016Datacenter'
      VirtualNetworkName = 'TutorialVM1'
      SubnetName = 'TutorialVM1'
      PublicIpAddressName = 'tutorialPublicIp2'
      Credential = $cred
      OpenPorts = 3389
    }

    $newVM2 = New-AzVM @vm2Params


    $newVM2

    ```


    ```Output

    ResourceGroupName        : TutorialResources

    Id                       : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM2

    VmId                     : 12345678-9abc-def0-1234-56789abcedf1

    Name                     : TutorialVM2

    Type                     : Microsoft.Compute/virtualMachines

    Location                 : eastus

    Tags                     : {}

    HardwareProfile          : {VmSize}

    NetworkProfile           : {NetworkInterfaces}

    OSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}

    ProvisioningState        : Succeeded

    StorageProfile           : {ImageReference, OsDisk, DataDisks}

    FullyQualifiedDomainName : tutorialvm2-dfa5af.eastus.cloudapp.azure.com

    ```


    Anda dapat melewati beberapa langkah untuk mendapatkan alamat IP publik vm baru karena dikembalikan di properti FullyQualifiedDomainName dari \$objekVM2 baru. Gunakan perintah berikut untuk menyambungkan menggunakan Desktop Jarak Jauh.


    ```powershell-interactive

    mstsc.exe /v $newVM2.FullyQualifiedDomainName

    ```
- durationInMinutes: 4
  title: Penghapusan
  content: >-
    Sekarang setelah tutorial selesai, saatnya untuk membersihkan sumber daya yang dibuat. Anda dapat menghapus sumber daya individual dengan `Remove-AzResource` perintah, tetapi cara teraman untuk menghapus semua sumber daya dalam grup sumber daya adalah menghapus grup menggunakan `Remove-AzResourceGroup` perintah.


    ```powershell-interactive

    $job = Remove-AzResourceGroup -Name TutorialResources -Force -AsJob


    $job

    ```


    ```Output

    Id     Name            PSJobTypeName   State         HasMoreData     Location             Command

    --     ----            -------------   -----         -----------     --------             -------

    1      Long Running... AzureLongRun... Running       True            localhost            Remove-AzResource...

    ```


    Perintah ini menghapus sumber daya yang dibuat selama tutorial, dan dijamin akan deallocate mereka dalam urutan yang benar. Parameter `-AsJob` menjaga PowerShell dari pemblokiran saat penghapusan berlangsung. Untuk menunggu hingga penghapusan selesai, gunakan perintah berikut:


    ```powershell-interactive

    Wait-Job -Id $job.Id

    ```


    Dengan pembersihan selesai, tutorial selesai. Lanjutkan untuk ringkasan semua yang Anda pelajari dan tautan ke sumber daya yang akan membantu Anda dengan langkah selanjutnya.
- durationInMinutes: 1
  title: Ringkasan
  content: "\nSelamat! Anda mempelajari cara membuat VM dengan sumber daya baru atau yang sudah ada, ekspresi yang digunakan, dan perintah Azure PowerShell lainnya untuk menangkap data yang akan disimpan dalam variabel shell, dan melihat beberapa sumber daya yang dibuat untuk AZURE VM.\n\nKe mana Anda pergi dari sini tergantung pada bagaimana Anda berencana untuk menggunakan Azure PowerShell. Ada berbagai materi yang melangkah lebih dalam pada fitur yang tercakup dalam tutorial ini.\n\n### <a name=\"in-depth-azure-powershell-documentation\"></a>Dokumentasi Azure PowerShell mendalam\n\nAnda mungkin ingin meluangkan waktu untuk menjelajahi set [dokumentasi Azure PowerShell](/powershell/azure/new-azureps-module-az?view=azps-4.1.0) lengkap.\n\nUntuk informasi selengkapnya tentang perintah yang digunakan dalam tutorial ini, lihat artikel berikut.\n\n- [New-AzResourceGroup](/powershell/module/Az.resources/new-Azresourcegroup)\n- [Get-Credential](/powershell/module/microsoft.powershell.security/get-credential)\n- [New-AzVM](/powershell/module/Az.compute/new-Azvm)\n- [Select-Object](/powershell/module/microsoft.powershell.utility/select-object)\n- [Dapatkan-AzPublicIpAddress](/powershell/module/Az.network/get-AzPublicIpAddress)\n- [Remove-AzResourceGroup](/powershell/module/Az.resources/Remove-AzResourceGroup)\n- [Menunggu-Job](/powershell/module/microsoft.powershell.core/wait-job)\n\nAda juga artikel yang masuk lebih dalam ke fitur yang ditampilkan dalam tutorial.\n\n- [PowerShell splatting](/powershell/module/microsoft.powershell.core/about/about_splatting)\n- [Kueri](queries-azureps.md)\n- [Format](formatting-output.md)\n- [Menggunakan pekerjaan PowerShell](using-psjobs.md)\n\n### <a name=\"sample-scripts\"></a>Contoh skrip\n\nJika Anda ingin segera memulai dengan tugas-tugas tertentu, lihat beberapa contoh skrip.\n\n- [Linux Virtual Machines](/azure/virtual-machines/linux/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Windows Virtual Machines](/azure/virtual-machines/windows/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Aplikasi Web](/azure/app-service-web/app-service-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [SQL Database](/azure/sql-database/sql-database-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Cosmos DB](/azure/cosmos-db/powershell-samples?toc=%2fpowershell%2fmodules%2ftoc.json)\n\n### <a name=\"feedback\"></a>Saran dan Komentar\n\nJika Anda ingin memberikan umpan balik, saran, atau mengajukan pertanyaan, ada beberapa cara bagi Anda untuk menghubungi.\n\n* `Send-Feedback`adalah perintah bawaan untuk Azure PowerShell yang memungkinkan Anda memberikan umpan balik bentuk bebas kepada tim.\n* Ajukan permintaan fitur atau laporan bug di [repositori Azure PowerShell](https://github.com/Azure/azure-powershell/issues).\n* Ajukan pertanyaan atau dapatkan klarifikasi dengan mengajukan masalah di [repositori dokumentasi Azure PowerShell](https://github.com/MicrosoftDocs/azure-docs-powershell/issues).\n\nKami harap Anda menikmati menggunakan Azure PowerShell!"
