### YamlMime:Tutorial
title: Membuat mesin virtual dengan Azure PowerShell
metadata:
  title: Membuat mesin virtual dengan Azure PowerShell
  description: Mulailah dengan Azure PowerShell dengan membuat mesin virtual.
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurepowershell
  ms.date: 03/12/2022
  ms.author: mirobb
  author: mikefrobbins
  manager: barbkess
  ms.devlang: azure-powershell
  ms.prod: powershell
  ms.technology: azure-powershell
  ms.topic: tutorial
  clicktale: true
  ms.openlocfilehash: cb57796e8a2638db8b2cb5737b14e0983271e5c1
  ms.sourcegitcommit: b346b2fbd8b25f54759984e75ddbee3304921c43
  ms.translationtype: MT
  ms.contentlocale: id-ID
  ms.lasthandoff: 03/16/2022
  ms.locfileid: "140663013"
items:
- durationInMinutes: 1
  content: >-
    Dalam tutorial ini, Anda mempelajari semua langkah yang terlibat dalam menyiapkan mesin virtual dengan Azure PowerShell. Tutorial ini juga mencakup kueri output, penggunaan kembali sumber daya Azure, dan penghapusan sumber daya.


    Tutorial ini dapat diselesaikan dengan pengalaman interaktif yang ditawarkan melalui Azure Cloud Shell, atau Anda dapat [menginstal CLI](install-az-ps.md) secara lokal.


    Gunakan **ctrl-shift-v** (**cmd-shift-v** di macOS) untuk menempelkan teks tutorial ke Azure Cloud Shell.
- durationInMinutes: 1
  title: Masuk
  content: >-
    Jika Anda menggunakan penginstalan lokal Azure PowerShell, Anda harus masuk sebelum melakukan langkah lainnya.


    ```powershell-interactive

    Connect-AzAccount

    ```


    Selesaikan proses masuk dengan mengikuti langkah-langkah yang ditampilkan di terminal Anda.
- durationInMinutes: 1
  title: Buat grup sumber daya
  content: >-
    Di Azure, semua sumber daya dialokasikan dalam grup pengelolaan sumber daya. Grup sumber daya menyediakan pengelompokan logis dari sumber daya yang membuatnya lebih mudah untuk digunakan sebagai kumpulan.

    Untuk tutorial ini, semua sumber daya yang dibuat masuk ke dalam satu grup bernama `TutorialResources`.


    ```powershell-interactive

    New-AzResourceGroup -Name TutorialResources -Location eastus

    ```


    ```Output

    ResourceGroupName : TutorialResources

    Location          : eastus

    ProvisioningState : Succeeded

    Tags              :

    ResourceId        : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources

    ```
- durationInMinutes: 1
  title: Membuat info masuk admin untuk VM
  content: >-
    Sebelum dapat membuat mesin virtual baru, Anda harus membuat objek info masuk yang berisi nama pengguna dan kata sandi untuk akun administrator Windows VM.


    ```powershell-interactive

    $cred = Get-Credential -Message "Enter a username and password for the virtual machine."

    ```


    Masukkan nama pengguna dan kata sandi jika diminta. Objek info masuk yang dihasilkan dilewatkan sebagai parameter pada langkah berikutnya.


    ```Output

    Windows PowerShell credential request.

    Enter a username and password for the virtual machine.

    User: tutorAdmin

    Password for user tutorAdmin: *********

    ```
- durationInMinutes: 4
  title: Membuat komputer virtual
  content: >-
    Mesin virtual di Azure memiliki banyak dependensi. Azure PowerShell membuat sumber daya ini untuk Anda berdasarkan argumen baris perintah yang Anda tentukan. Untuk keterbacaan, kami menggunakan [Percikan PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting) untuk meneruskan parameter ke cmdlet Azure PowerShell.


    Buat mesin virtual baru yang menjalankan Windows.


    ```powershell-interactive

    $vmParams = @{
      ResourceGroupName = 'TutorialResources'
      Name = 'TutorialVM1'
      Location = 'eastus'
      ImageName = 'Win2016Datacenter'
      PublicIpAddressName = 'tutorialPublicIp'
      Credential = $cred
      OpenPorts = 3389
    }

    $newVM1 = New-AzVM @vmParams

    ```

    Saat VM dibuat, Anda melihat nilai parameter yang digunakan dan sumber daya Azure dibuat.

    PowerShell akan menampilkan bilah kemajuan seperti yang ditunjukkan di bawah ini.


    ```Output
     Creating Azure resources
      39% \
      [ooooooooooooooooooooooooooooooooooo                                                                 ]

      Creating TutorialVM1 virtual machine.
    ```


    Setelah VM siap, kita dapat melihat hasilnya di Portal Azure atau dengan memeriksa \$variabel newVM1.


    ```powershell-interactive

    $newVM1

    ```


    ```Output

    ResourceGroupName : TutorialResources

    Id                : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM1

    VmId              : 12345678-9abc-def0-1234-56789abcedf0

    Name              : TutorialVM1

    Type              : Microsoft.Compute/virtualMachines

    Location          : eastus

    Tags              : {}

    HardwareProfile   : {VmSize}

    NetworkProfile    : {NetworkInterfaces}

    OSProfile         : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}

    ProvisioningState : Succeeded

    StorageProfile    : {ImageReference, OsDisk, DataDisks}

    ```


    Nilai properti yang tercantum di dalam kurung kurawal adalah objek bersarang. Pada langkah selanjutnya, kami akan menunjukkan kepada Anda cara melihat nilai tertentu di objek bersarang ini.
- durationInMinutes: 5
  title: Mendapatkan informasi VM dengan kueri
  content: >-
    Mari kita dapatkan beberapa informasi lebih rinci dari VM yang baru saja dibuat. Dalam contoh ini, kita memverifikasi Nama VM dan akun admin yang kita buat.


    ```powershell-interactive

    $newVM1.OSProfile | Select-Object ComputerName,AdminUserName

    ```


    ```Output

    ComputerName AdminUsername

    ------------ -------------

    TutorialVM1  tutorialAdmin

    ```


    Kita dapat menggunakan perintah Azure PowerShell lain untuk mendapatkan informasi spesifik tentang konfigurasi jaringan.


    ```powershell-interactive

    $newVM1 | Get-AzNetworkInterface |
      Select-Object -ExpandProperty IpConfigurations |
        Select-Object Name,PrivateIpAddress
    ```


    Dalam contoh ini, kita menggunakan alur PowerShell untuk mengirim objek \$newVM1 ke cmdlet `Get-AzNetworkInterface`. Dari objek antarmuka jaringan yang dihasilkan, kita memilih objek IpConfigurations bersarang. Dari objek IpConfigurations, kita memilih properti Name dan PrivateIpAddress.


    ```Output

    Name        PrivateIpAddress

    ----        ----------------

    TutorialVM1 192.168.1.4

    ```


    Untuk mengonfirmasi bahwa VM sedang berjalan, kita perlu terhubung melalui Remote Desktop. Untuk itu, kita perlu mengetahui alamat IP Publik.


    ```powershell-interactive

    $publicIp = Get-AzPublicIpAddress -Name tutorialPublicIp -ResourceGroupName TutorialResources


    $publicIp | Select-Object Name,IpAddress,@{label='FQDN';expression={$_.DnsSettings.Fqdn}}

    ```


    Dalam contoh ini, kita menggunakan `Get-AzPublicIpAddress` dan menyimpan hasilnya di variabel \$publicIp. Dari variabel ini, kita memilih properti dan menggunakan ekspresi untuk mengambil properti Fqdn bersarang.


    ```Output

    Name             IpAddress           FQDN

    ----             ---------           ----

    tutorialPublicIp <PUBLIC_IP_ADDRESS> tutorialvm1-8a0999.eastus.cloudapp.azure.com

    ```


    Dari mesin lokal Anda, Anda dapat menjalankan perintah berikut untuk terhubung ke VM melalui Remote Desktop.


    ```powershell-interactive

    mstsc.exe /v <PUBLIC_IP_ADDRESS>

    ```


    Untuk informasi selengkapnya tentang kueri untuk properti objek, lihat [Mengkueri untuk sumber daya Azure](./queries-azureps.md).
- durationInMinutes: 4
  title: Membuat VM baru di subnet yang ada
  content: >-
    VM kedua menggunakan subnet yang ada.


    ```powershell-interactive

    $vm2Params = @{
      ResourceGroupName = 'TutorialResources'
      Name = 'TutorialVM2'
      ImageName = 'Win2016Datacenter'
      VirtualNetworkName = 'TutorialVM1'
      SubnetName = 'TutorialVM1'
      PublicIpAddressName = 'tutorialPublicIp2'
      Credential = $cred
      OpenPorts = 3389
    }

    $newVM2 = New-AzVM @vm2Params


    $newVM2

    ```


    ```Output

    ResourceGroupName        : TutorialResources

    Id                       : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM2

    VmId                     : 12345678-9abc-def0-1234-56789abcedf1

    Name                     : TutorialVM2

    Type                     : Microsoft.Compute/virtualMachines

    Location                 : eastus

    Tags                     : {}

    HardwareProfile          : {VmSize}

    NetworkProfile           : {NetworkInterfaces}

    OSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}

    ProvisioningState        : Succeeded

    StorageProfile           : {ImageReference, OsDisk, DataDisks}

    FullyQualifiedDomainName : tutorialvm2-dfa5af.eastus.cloudapp.azure.com

    ```


    Anda dapat melewati beberapa langkah untuk mendapatkan alamat IP publik VM baru sejak ditampilkan di properti FullyQualifiedDomainName objek \$newVM2. Gunakan perintah berikut untuk terhubung menggunakan Desktop Jauh.


    ```powershell-interactive

    mstsc.exe /v $newVM2.FullyQualifiedDomainName

    ```
- durationInMinutes: 4
  title: Penghapusan
  content: >-
    Setelah tutorial selesai, saatnya untuk menghapus sumber daya yang dibuat. Anda dapat menghapus sumber daya satu per satu dengan perintah `Remove-AzResource`, tetapi cara teraman untuk menghapus semua sumber daya dalam grup sumber daya adalah dengan menghapus grup menggunakan perintah `Remove-AzResourceGroup`.


    ```powershell-interactive

    $job = Remove-AzResourceGroup -Name TutorialResources -Force -AsJob


    $job

    ```


    ```Output

    Id     Name            PSJobTypeName   State         HasMoreData     Location             Command

    --     ----            -------------   -----         -----------     --------             -------

    1      Long Running... AzureLongRun... Running       True            localhost            Remove-AzResource...

    ```


    Perintah ini akan menghapus sumber daya yang dibuat selama tutorial, dan dijamin akan menghapus alokasinya dengan urutan yang benar. Parameter `-AsJob` mencegah PowerShell terblokir saat penghapusan berlangsung. Untuk menunggu hingga penghapusan selesai, gunakan perintah berikut:


    ```powershell-interactive

    Wait-Job -Id $job.Id

    ```


    Jika pembersihan selesai, berarti tutorial ini selesai. Lanjutkan dengan ringkasan semua hal yang dipelajari dan link ke sumber daya yang akan membantu Anda melalui langkah berikutnya.
- durationInMinutes: 1
  title: Ringkasan
  content: "\nSelamat! Anda mempelajari cara membuat VM dengan sumber daya baru atau yang sudah ada, ekspresi yang digunakan, dan perintah Azure PowerShell untuk menangkap data yang akan disimpan dalam variabel shell, dan melihat beberapa sumber daya yang dibuat untuk VM Azure.\n\nLangkah selanjutnya bergantung pada tujuan penggunaan Azure PowerShell. Ada berbagai materi yang membahas lebih dalam tentang fitur yang dijelaskan dalam tutorial ini.\n\n### <a name=\"in-depth-azure-powershell-documentation\"></a>Dokumentasi Azure PowerShell mendalam\n\nAnda mungkin ingin meluangkan waktu untuk menjelajahi set [dokumentasi Azure PowerShell](/powershell/azure/new-azureps-module-az?view=azps-4.1.0) lengkap.\n\nUntuk informasi selengkapnya tentang perintah yang digunakan dalam tutorial ini, lihat artikel berikut.\n\n- [Baru-AzResourceGroup](/powershell/module/Az.resources/new-Azresourcegroup)\n- [Get-Credential](/powershell/module/microsoft.powershell.security/get-credential)\n- [New-AzVM](/powershell/module/Az.compute/new-Azvm)\n- [Select-Object](/powershell/module/microsoft.powershell.utility/select-object)\n- [Dapatkan-AzPublicIpAddress](/powershell/module/Az.network/get-AzPublicIpAddress)\n- [Remove-AzResourceGroup](/powershell/module/Az.resources/Remove-AzResourceGroup)\n- [Wait-Job](/powershell/module/microsoft.powershell.core/wait-job)\n\nAda juga artikel yang membahas lebih dalam tentang fitur yang ditunjukkan dalam tutorial.\n\n- [Percikan PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting)\n- [Kueri](queries-azureps.md)\n- [Pemformatan](formatting-output.md)\n- [Menggunakan pekerjaan PowerShell](using-psjobs.md)\n\n### <a name=\"sample-scripts\"></a>Contoh skrip\n\nJika Anda ingin segera memulai dengan tugas tertentu, lihat beberapa contoh skrip.\n\n- [Linux Virtual Machines](/azure/virtual-machines/linux/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Windows Virtual Machines](/azure/virtual-machines/windows/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Aplikasi Web](/azure/app-service-web/app-service-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [SQL Database](/azure/sql-database/sql-database-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Cosmos DB](/azure/cosmos-db/powershell-samples?toc=%2fpowershell%2fmodules%2ftoc.json)\n\n### <a name=\"feedback\"></a>Saran dan Komentar\n\nJika Anda ingin memberikan umpan balik, saran, atau mengajukan pertanyaan, ada beberapa cara untuk dapat terhubung.\n\n* `Send-Feedback` adalah perintah bawaan untuk Azure PowerShell yang memungkinkan Anda memberikan umpan balik bentuk bebas kepada tim.\n* Ajukan permintaan fitur atau laporan bug di [repositori Azure PowerShell](https://github.com/Azure/azure-powershell/issues).\n* Ajukan pertanyaan atau dapatkan klarifikasi dengan mengajukan masalah di [Repositori dokumentasi Azure PowerShell](https://github.com/MicrosoftDocs/azure-docs-powershell/issues).\n\nKami berharap Anda menikmati penggunaan Azure PowerShell!"
